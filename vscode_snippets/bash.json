{"LIBS":{"body":"for LIB in \"$SCRIPT_DIR\"\/lib\/*; do source \"$LIB\"; done","prefix":"LIBS"},"SCRIPT_DIR":{"body":"SCRIPT_DIR=$(cd -- \"$(dirname -- \"${BASH_SOURCE[0]}\")\" &>\/dev\/null && pwd)","prefix":"SCRIPT_DIR"},"COLORIZE":{"body":["RED=\"[31m\"","GREEN=\"[32m\"","BLUE=\"[34m\"","YELLOW=\"[33m\"","ENDCOLOR=\"[0m\"","COLOR=\"\\x1b\"","","function colorize() {","\tsed \"s|\\(down\\)|${COLOR}${RED}\\1${COLOR}${ENDCOLOR}|g\" |","\t\tsed \"s|\\(up\\)|${COLOR}${GREEN}\\1${COLOR}${ENDCOLOR}|g\" |","\t\tsed \"s|\\(off\\)|${COLOR}${RED}\\1${COLOR}${ENDCOLOR}|g\" |","\t\tsed \"s|\\( on\\)|${COLOR}${GREEN}\\1${COLOR}${ENDCOLOR}|g\" |","\t\tsed \"s|\\(false\\)|${COLOR}${RED}\\1${COLOR}${ENDCOLOR}|g\" |","\t\tsed \"s|\\(true\\)|${COLOR}${GREEN}\\1${COLOR}${ENDCOLOR}|g\" |","\t\tsed \"s|\\(running\\)|${COLOR}${RED}\\1${COLOR}${ENDCOLOR}|g\" |","\t\tsed \"s|\\(complete\\)|${COLOR}${GREEN}\\1${COLOR}${ENDCOLOR}|g\" |","\t\tsed \"s|\\(activating\\)|${COLOR}${RED}\\1${COLOR}${ENDCOLOR}|g\" |","\t\tsed \"s|\\(active\\)|${COLOR}${GREEN}\\1${COLOR}${ENDCOLOR}|g\" |","\t\tsed \"s|^\\(.*_ansible\\)|${COLOR}${BLUE}\\1${COLOR}${ENDCOLOR}|g\" |","\t\tsed \"s|\\(free\\)|${COLOR}${GREEN}\\1${COLOR}${ENDCOLOR}|g\" |","\t\tsed \"s|\\(various\\)|${COLOR}${YELLOW}\\1${COLOR}${ENDCOLOR}|g\" |","\t\tsed \"s|\\([0-9][0-9]:[0-9][0-9]:[0-9][0-9]\\)|${COLOR}${GREEN}\\1${COLOR}${ENDCOLOR}|g\" |","    sed \"s|\\(PASS\\)|${COLOR}${GREEN}\\1${COLOR}${ENDCOLOR}|g\" |","    sed \"s|\\(FAIL\\)|${COLOR}${RED}\\1${COLOR}${ENDCOLOR}|g\"","}"],"prefix":"COLORIZE"},"PARALLEL_JOBS":{"body":["max_jobs=20 # set how many parallel jobs","job_num=0 # starting job number - leave at zero","jobs_running=0 # number of jobs running - leave at zero","for this_item in $(# Get item list); do","\t# Increment the current job counter","\tjobs_running=$((jobs_running + 1))","\tjob_num=$((job_num + 1))","\techo \"Processing item number ${job_num}\"","","\tRun_Function \"$this_item\" & # Modify this","","\t# If the maximum number of concurrent jobs is reached, wait for any job to finish","\tif [ \"$jobs_running\" -ge \"$max_jobs\" ]; then","\t\twait -n","\t\tcurrent_jobs=$((jobs_running - 1))","\tfi","","done"],"prefix":"PARALLEL_JOBS"},"WAIT_FOR_CONDITION":{"body":["function wait_for_condition() {","\tlocal count=60 # How many times to try","\tthis_count=0 # Starting count - leave at zero","\twait_for=5 # How long to wait in between tries","\tlocal this_param1=\"$1\"","\tlocal this_param2=\"$2\"","\techo \"Waiting for condition ...\"","\twhile [[ \"$( fetch item )\" != \" expect condition \" ]]; do # Change this line","\t\tsleep \"$wait_for\"","\t\techo -n \".\"","\t\tthis_count=$((this_count + 1))","\t\tif [[ \"$this_count\" == \"$count\" ]]; then break; fi","\tdone","}"],"prefix":"WAIT_FOR_CONDITION"}}